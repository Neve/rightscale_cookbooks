{
  "name": "lb",
  "description": "RighScale LB Manager",
  "long_description": "# RightScale Load Balancer Cookbook \n\n## DESCRIPTION:\n\nThis cookbook provides a set of load balancer recipes used by RightScale's\nLoad Balancer ServerTemplates.\n\nThis cookbook is intended to provide an interface for general load balancer\nactions and parameters.\n\n## DETAILS:\n\n### General\nThe 'lb' interface is defined by a Lightweight Resource, which can be found in\nthe `resources/default.rb` file.\n\nThis cookbook is intended to be used in conjunction with cookbooks that contain\nLightweight Providers that implement the 'lb' interface. See the RightScale\n`lb_haproxy` cookbook for an example.\n\nTo review information about Lightweight Resources and Providers (LWRPs), see\n[Lightweight Resources and Providers][LWRP].\n\n[LWRP]: http://support.rightscale.com/12-Guides/Chef_Cookbooks_Developer_Guide/08-Chef_Development/Lightweight_Resources_and_Providers_(LWRP)\n\n## REQUIREMENTS:\n\n* Requires a virtual machine launched from a RightScale-managed RightImage.\n\n## SETUP:\n\n## USAGE:\n\n### Application Server Attach\n\n#### do_attach_request\n\nThis recipe is used by application servers to request that load balancer servers\nconfigure themselves to attach to the application server.\n\n#### handle_attach recipes\n\nThis recipe is used by a load balancer server to add an application server to\nits configuration when the application server requests it, and restart,\nif necessary.\n\n### Application Server Detach\n\n#### do_detach_request\n\nThis recipe is used by application servers to request that load balancer servers\nconfigure themselves to detach from the application server.\n\n#### handle_detach recipes\n\nThis recipe is used by a load balancer server to remove an application server\nfrom its configuration when the application server requests it, and restart,\nif necessary.\n\n### Automatic Server Detection\n\n#### do_attach_all recipe\n\nThis recipe is used by the load balancer to automatically detect whether\napplication servers have disappeared or reappeared, without detaching or\nreattaching using the other recipes. This recipe is set to run in a periodic\nreconverge, which, by default, runs every 15 minutes.\n\n## RESOURCES\n\n### lb_client (providers/client.rb)\n\nThere is a generic lb_client resource provider included in this cookbook. This\nprovider is intended to be used on application servers that need to attach to a\nload balancer. The lb_client provider only supports the :attach_request and\n:detach_request actions.\n\nThe :attach_request and :detach_request actions will send a remote recipe to all\nload balancers in the deployment with the \"loadbalancer:#{pool_name}=lb\"\nmachine tag.  The :attach_request action will request them to run the\n\"lb::handle_attach\" recipe.  The :detach_request will request them to run the\n\"lb::handle_dettach\" recipe.\n\nExample of an application server requesting to be attached to the \"www\" vhost:\n\n    lb \"www\" do\n      backend_id \"my-webserver-#{node[:rightscale][:instance_uuid]}\"\n      backend_ip node[:app][:ip]\n      backend_port node[:app][:port].to_i\n      action :attach_request\n    end\n  \nFor more examples see the lb::do_attach_request and lb::do_detach_request\nrecipes.\n\n## KNOWN LIMITATIONS:\n\nThere are no known limitations.\n\n## LICENSE\n\nCopyright RightScale, Inc. All rights reserved.\nAll access and use subject to the RightScale Terms of Service available at\nhttp://www.rightscale.com/terms.php and, if applicable, other agreements\nsuch as a RightScale Master Subscription Agreement.\n",
  "maintainer": "RightScale, Inc.",
  "maintainer_email": "support@rightscale.com",
  "license": "Copyright RightScale, Inc. All rights reserved.",
  "platforms": {
  },
  "dependencies": {
    "lb_haproxy": ">= 0.0.0",
    "lb_clb": ">= 0.0.0",
    "lb_elb": ">= 0.0.0",
    "apache2": ">= 0.0.0",
    "app": ">= 1.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
    "lb::default": "This loads the required load balancer resources.",
    "lb::install_server": "Installs the load balancer and adds the loadbalancer:<pool_name>=lb tags to your server, which identifies it as a load balancer for a given listener pool. This tag is used by application servers to request connection/disconnection.",
    "lb::handle_attach": "Remote recipe executed by do_attach_request. DO NOT RUN.",
    "lb::handle_detach": "Remote recipe executed by do_detach_request. DO NOT RUN.",
    "lb::do_attach_all": "Registers all running application servers with the loadbalancer:<pool_name>=app tags. This should be run on a load balancer to connect all application servers in a deployment.",
    "lb::do_attach_request": "Sends request to all load balancers to attach the current server to the listener pool using given parameters (For lb_haproxy - lb/pools input value will be used. For ELB/CLB - lb/service/* input values will be used). This should be run by a new application server that is ready to accept connections.",
    "lb::do_detach_request": "Sends request to all load balancers to detach the current server from the listener pool  (For lb_haproxy - lb/pools input value will be used. For ELB/CLB - lb/service/* input values will be used). This should be run by an application server at decommission.",
    "lb::setup_reverse_proxy_config": "Configures Apache reverse proxy.",
    "lb::setup_monitoring": "Installs the load balancer collectd plugin for monitoring support.",
    "lb::setup_advanced_configuration": "Sets up advanced load balancer configuration."
  },
  "version": "13.4.0"
}