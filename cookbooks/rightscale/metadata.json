{
  "name": "rightscale",
  "description": "RightScale Cookbooks",
  "long_description": "# RightScale Cookbook\n\n## DESCRIPTION:\n\nThis cookbook provides base recipes used to set up services used by the\nRightScale Cloud Management Platform.\n\n## REQUIREMENTS:\n\nRequires a virtual machine launched from a RightScale managed RightImage.\n\n## COOKBOOKS DEPENDENCIES:\n\nPlease see the `metadata.rb` file for the latest dependencies.\n\n## KNOWN LIMITATIONS:\n\nThere are no known limitations.\n\n## SETUP:\n\nThe `rightscale::default` recipe performs common server configuration\nsteps such as enabling monitoring on an instance so that graphs can be\ndisplayed in the RightScale Dashboard.\n\nThe `rightscale::install_tools` recipe installs the\n`rightscale_tools` gem which provides tools for dealing with databases,\nvolumes, and remote object storage providers.\n\nThe `rightscale::setup_cloud` recipe performs cloud specific setup such\nas setting up the monitoring agents for the Rackspace Managed Open cloud.\n\nThe `rightscale::rightscale::setup_security_updates` recipe configures\nthe package manager to apply security updates by unfreezing the\nservers repositories. On apt based systems this unfreezes the security\nrepository. On yum based systems this unfreezes all repositories except\nthe RightScale-Epel repository. Runs if the `rightscale/security_updates`\ninput is set to \"enable\", otherwise this action is skipped. Note: once\nsecurity updates are enabled they can not be disabled.\n\nThe `rightscale::do_security_updates` recipe updates a server with\nthe latest available security patches. Non-security related software updates\nare not installed. It runs as the last operational script to ensure a new\nserver has all available security updates applied. Runs if the\n`rightscale/security_updates` input is set to \"enable\", otherwise\nthis action is skipped. Note: once security updates are enabled they can\nnot be disabled.\n\n## USAGE:\n\n### Update a server with latest security patches\n\n1. Prior to launching a server set the advanced input\n   `rightscale/security_updates` to `enable`\n2. When the server is operational all current security updates are applied.\n3. Apply security updates using:\n\n    \"rightscale::do_security_updates\"\n\n   to bring the server to the latest patch level.\n\n### Enable security updates on a running server\n\n1. On a running a server set the advanced input `rightscale/security_updates`\n   to `enable`\n2. Setup the package manager for security updates using:\n\n    \"rightscale::setup_security_updates\"\n\n   to unfreeze the security related repositories.\n3. To update the server with the latest security updates follow the steps above.\n\n## DETAILS:\n\n### Definitions:\n\n#### rightscale_enable_collectd_plugin\n\n* Accepts only one parameter \"name\" which is the name of the collectd plugin to\n  enable.\n* The plugin name is added to `node[:rightscale][:plugin_list_array]` which is\n  used to create the list of plugins in the `/etc/collectd/collectd.conf` file.\n* The `node[:rightscale][:plugin_list_array]` will have any plugins listed\n  in the `node[:rightscale][:plugin_list]` merged into it, which\n  supports any legacy recipes, as well as allow the input to be manipulated in\n  the RightScale Dashboard.\n\nSyntax:\n\n    rightscale_enable_collectd_plugin \"curl_json\"\n\n#### rightscale_monitor_process\n\n* Accepts only one parameter, \"name\" which is the name of the process to\n  monitor.\n* The process name is added to the `node[:rightscale][:process_list_array]`\n  which is used to create the list of processes in the\n  `/etc/collectd/conf/processes.conf` file.\n* The `node[:rightscale][:process_list_array]` will have any processes\n  listed in `node[:rightscale][:process_list]` merged into it, which supports\n  any legacy recipes, as well as allow the input to be manipulated in the\n  RightScale Dashboard.\n\nSyntax:\n\n    rightscale_monitor_process \"nginx\"\n\n#### rightscale_marker\n\n* Accepts only one parameter, \"location\" which can be used to denote\n  the :start or :end of a recipe. It can also be :begin, :stop, and\n  the string versions. The default value for this parameter is :begin.\n* Used to log the start and end of a recipe using the `Chef::Log.info` Chef\n  Logger class.\n  Should be added at the beginning of a recipe. No need for marking the end of\n  the recipe.\n* Example:\n  `================= cookbook_name::recipe_name : START/END ===================`\n\nSyntax:\n\n    rightscale_marker\n    ...\n\n### Resources:\n\n#### rightscale_server_collection\n\nThe server collection resource finds a set of servers in a deployment with a set\nof tags. The `tags` attribute specifies the tag or tags to search for (if\nmultiple tags are specified, servers with any of the tags will match) and the\noptional `mandatory_tags` attribute specifies tags that need to also\nappear on the servers, it will wait one minute for the `mandatory_tags`\nto appear, which can be overridden with the `timeout` attribute.\n\nSyntax:\n\n    rightscale_server_collection \"rightscale_servers\" do\n      tags \"rs_login:state=active\"\n      mandatory_tags \"server:uuid=*\"\n    end\n\nNOTE: The `secondary_tags` attribute is deprecated in favor of `mandatory_tags`.\n\n## LICENSE:\n\nCopyright RightScale, Inc. All rights reserved.\nAll access and use subject to the RightScale Terms of Service available at\nhttp://www.rightscale.com/terms.php and, if applicable, other agreements\nsuch as a RightScale Master Subscription Agreement.\n",
  "maintainer": "RightScale, Inc.",
  "maintainer_email": "support@rightscale.com",
  "license": "Copyright RightScale, Inc. All rights reserved.",
  "platforms": {
  },
  "dependencies": {
    "driveclient": ">= 0.0.0",
    "cloudmonitoring": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
    "rightscale": {
      "display_name": "RightScale Attributes",
      "type": "hash",
      "choice": [

      ],
      "calculated": false,
      "required": "optional",
      "recipes": [

      ]
    }
  },
  "groupings": {
  },
  "recipes": {
    "rightscale::vars_db_master": "Setup vars for db master template.",
    "rightscale::vars_lb_ha": "Setup vars for lb_haproxy master template.",
    "rightscale::vars_app_wp": "Setup vars for app php wordpress master template.",
    "rightscale::default": "Installs the utilities that are required for RightScale support.",
    "rightscale::setup_monitoring": "Installs and configures RightScale dashboard monitoring features.",
    "rightscale::setup_ssh": "Installs the private ssh key.",
    "rightscale::setup_hostname": "Sets the system hostname.",
    "rightscale::setup_timezone": "Sets the system timezone.",
    "rightscale::setup_server_tags": "Sets machine tags that are common to all RightScale managed servers.",
    "rightscale::setup_cloud": "Sets up cloud specific functions.",
    "rightscale::install_tools": "Installs RightScale's instance tools.",
    "rightscale::install_mysql_collectd_plugin": "Installs the mysql collectd plugin for monitoring support.",
    "rightscale::install_file_stats_collectd_plugin": "Installs the file-stats.rb collectd plugin for monitoring support. It is also used for mysql binary backup alerting.",
    "rightscale::do_security_updates": "Do a system package update to pull in the latest security patches.",
    "rightscale::setup_security_updates": "Sets up package manager software for security updates.",
    "rightscale::setup_security_update_monitoring": "Sets up collectd plugin to monitor for available security updates."
  },
  "version": "13.4.0"
}